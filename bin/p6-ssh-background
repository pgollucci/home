#!/usr/bin/env zsh -li

usage() {

    echo "p6-ssh-background type host [aws_profile]"

    exit 0
}

set_theme() {
    local host=$1
    local hex_fg=$2
    local hex_bg=$3
    local opacity=$4

    local fg_r=`echo $hex_fg | sed 's/../0x&,/g' | awk -F "," '{printf("%d",$1 * 257)}'`
    local fg_g=`echo $hex_fg | sed 's/../0x&,/g' | awk -F "," '{printf("%d",$2 * 257)}'`
    local fg_b=`echo $hex_fg | sed 's/../0x&,/g' | awk -F "," '{printf("%d",$3 * 257)}'`
    local bg_r=`echo $hex_bg | sed 's/../0x&,/g' | awk -F "," '{printf("%d",$1 * 257)}'`
    local bg_g=`echo $hex_bg | sed 's/../0x&,/g' | awk -F "," '{printf("%d",$2 * 257)}'`
    local bg_b=`echo $hex_bg | sed 's/../0x&,/g' | awk -F "," '{printf("%d",$3 * 257)}'`

    /usr/bin/osascript <<EOF
tell application "iTerm"
   tell current session of current window
      set name to "$host"
      set foreground color to {$fg_r, $fg_g, $fg_b}
      set background color to {$bg_r, $bg_g, $bg_b}
      set transparency to "$opacity"
   end tell
end tell
EOF
}

name_to_rgb() {
    local name="$1"

    case $name in
	red)      echo "fa053e" ;;
	orange)   echo "fa6b05" ;;
	yellow)   echo "dedb86" ;;
	green)    echo "1c6928" ;;
	dgreen)   echo "064a10" ;;
	cyan)     echo "3beaf6" ;;
	blue)     echo "054cf2" ;;
	dblue)    echo "1a2261" ;;
	lpurple)  echo "eb5bd5" ;;
	purple)   echo "973bcc" ;;
	pink)     echo "f213d5" ;;
	lsalmon3) echo "cd8162" ;;
	brown)    echo "542323" ;;
	black)    echo "000000" ;;
	white)    echo "ffffff" ;;
	opacity)  echo "0.0" ;;
    esac
}

normalize() {
    local host="$1"

    echo $host | sed -e 's,\..*,,' -e 's,\.,_,g'
}

fg_for_host() {
    local host="$1"

    cat $HOME/.hosts | awk -v k=$host 'tolower($1) ~ tolower(k) { print $3 }'
}

bg_for_host() {
    local host="$1"

    cat $HOME/.hosts | awk -v k=$host 'tolower($1) ~ tolower(k) { print $2 }'
}

db_engine_for_host() {
    local host="$1"

    cat $HOME/.hosts | awk -v k=$host 'tolower($1) ~ tolower(k) { print $4 }'
}

db_user_for_host() {
    local host="$1"

    cat $HOME/.hosts | awk -v k=$host 'tolower($1) ~ tolower(k) { print $5 }'
}

ssh_do() {
    local host="$1"

    ssh $host
}

aws_do() {
    local tag="$1"
    local type="$2"
    local profile="$3"

    [ -n "$profile" ] && awsa_${profile}
    # env/act

    # tokens
    local expired=$(GLOBAL_aws_sts_expired)
    [ x"$expired" = x"1" ] && GLOBAL_aws_sts_refresh

    # lookup
    local instance_id=$(aws_ec2_instance_id_from_name_tag "$tag")
    local ami_name=$(aws_ec2_ami_name_from_instance_id "$instance_id")
    local host
    if [ x"$type" = x"pub" ]; then
	host=$tag
    else
	host=$(aws_ec2_private_ip "$instance_id")
    fi

    local user=$(aws_ec2_user_from_ami_name "$ami_name")

    local key_name=$(aws_ec2_key_name "$instance_id")
    local i_flag=
    local key_dir=$HOME/.ssh/dynamic
    if [ -n "$key_name" -a -r "$key_dir/$key_name" ]; then
	i_flag="-i $key_dir/$key_name"
    fi

    # do
    if [ -z "$user" ]; then
	# ~/.ssh/config or $USER default
	eval "ssh $i_flag -o ConnectTimeout=1 $host"
    else
	case $user in
	    lanadmin|admin) ;;
	    *) eval "ssh $i_flag -o ConnectTimeout=1 $user@$host" ;;
	esac
    fi
}

db_do() {
    local host="$1"
    local t_host="$2"

    local engine=$(db_engine_for_host "$t_host")
    local user=$(db_user_for_host "$t_host")

    case $engine in
	mysql) mysql --i-am-a-dummy -u $user -h $host ;;
    esac
}

main() {
    local type="$1"
    local host="$2"
    local aws_profile="$3" # optional

    local opacity=$(name_to_rgb "opacity")
    local black=$(name_to_rgb "black")
    local white=$(name_to_rgb "white")

    local t_host=$(normalize "$host")
    local host_fg=$(fg_for_host "$t_host")
    local host_bg=$(bg_for_host "$t_host")

    local fg=$(name_to_rgb "$host_fg")
    local bg=$(name_to_rgb "$host_bg")

    set_theme "$host" "$fg" "$bg" "$opacity"
    case $type in
	ssh)      ssh_do    "$host" ;;
	aws-pub)  aws_do    "$host" "pub" "$aws_profile" ;;
	aws-priv) aws_do    "$host" "priv" "$aws_profile" ;;
	db)       db_do     "$host" "$t_host" ;;
#	tunnel)  tunnel_do "$host" ;;
    esac
   set_theme "localhost" "$white" "$black" "$opacity"
}

main "$@"
