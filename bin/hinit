#!/bin/sh -e

usage() {

    echo "hinit [-cDhp]"
    echo <<END_U
-c        Clean:   delete files no longer in git or known excludes (rsync --delete) , Default SAVE FILES
-D        Dry:     do not overwrite HOME (rsync -n), Default OVERWRITE
-h        Help:    display this message
-p        Private: install private things too (never on remote computer)
END_U

    exit 0
}

main() {

    #### Options
    Clean=
    Dry=-n
    Help=0
    Private=0

    while getopts cDhp o; do
	case "$o" in
	    c) Clean="--delete" ;;
	    D) Dry="" ;;
	    h) usage ;;
	    p) Private=1 ;;
	esac
    done

    shift $(( OPTIND - 1 ));

    OS=$(uname -s)
    USER=${1:-$USER}
    group=$USER
    THOME=/tmp/$USER
    SUDO=sudo

    case $OS in
	*CYGWIN*)
	    SUDO=
	    HOME=/home/$USER
	    ;;
	Darwin)
	    HOME=/Users/$USER
	    group=staff
	    ;;
	**)
	    HOME=/home/$USER
	    ;;
    esac

    #### Main Setup
    echo "Creating Staging Area"
    $SUDO rm -rf $THOME
    $SUDO mkdir $THOME
    $SUDO chown $USER $THOME

    echo "Dirs"
    mkdir $THOME/.zcache
    mkdir -p $THOME/dev/repos/{gh,asf,fbsd}
    mkdir -p $THOME/vendor/{pgollucci,magnars,olivierverdier}

    echo "Cloning Repos"

    echo "home"
    git clone -q https://github.com/pgollucci/home.git          $THOME

    echo "emacs"
    git clone -q https://github.com/pgollucci/emacs.git         $THOME/.repos/vendor/pgollucci/emacs
    git clone -q https://github.com/magnars/.emacs.d.git        $THOME/.repos/vendor/magnars/.emacs.d

    echo "zsh-git-prompt"
    git clone -q https://github.com/olivierverdier/zsh-git-prompt.git $THOME/.repos/vendor/olivierverdier/zsh-git-prompt

    echo "Ruby"
    git clone -q https://github.com/sstephenson/rbenv.git       $THOME/.repos/langs/rbenv
    mkdir -p $THOME/.repos/langs/rbenv/plugins
    git clone -q https://github.com/sstephenson/ruby-build.git  $THOME/.repos/langs/rbenv/plugins/ruby-build

    echo "Perl"
    git clone -q https://github.com/tokuhirom/plenv.git         $THOME/.repos/langs/plenv
    mkdir -p $THOME/.repos/langs/plenv/plugins
    git clone -q https://github.com/tokuhirom/Perl-Build.git    $THOME/.repos/langs/plenv/plugins/perl-build

    echo "Python"
    git clone -q https://github.com/yyuu/pyenv.git              $THOME/.repos/langs/pyenv
    git clone -q https://github.com/pyenv/pyenv-virtualenv.git  $THOME/.repos/langs/pyenv/plugins/pyenv-virtualenv

    echo "Go"
    git clone -q https://github.com/wfarr/goenv.git             $THOME/.repos/langs/goenv

    echo "Java"
    git clone -q https://github.com/gcuisinier/jenv.git         $THOME/.repos/langs/jenv

    echo "R"
    git clone -q https://github.com/viking/Renv.git             $THOME/.repos/langs/Renv
    mkdir -p $THOME/.repos/langs/Renv/plugins
    git clone -q https://github.com/viking/R-build.git          $THOME/.repos/langs/Renv/plugins/R-build

    echo "Scala"
    git clone -q https://github.com/scalaenv/scalaenv.git       $THOME/.repos/langs/scalaenv

    echo "Lua"
    git clone -q https://github.com/cehoffman/luaenv.git        $THOME/.repos/langs/luaenv
    mkdir -p $THOME/.repos/langs/luaenv/plugins
    git clone -q https://github.com/cehoffman/lua-build.git     $THOME/.repos/langs/luaenv/plugins/lua-build

    echo "zplug"
    git clone -q https://github.com/b4b4r07/zplug.git           $THOME/.repos/zsh/zplug

    echo "zpresto"
    git clone -q https://github.com/sorin-ionescu/prezto.git    $THOME/.repos/zsh/zprezto

    echo "Transfering"
    $SUDO rsync \
	  -atz $Dry $Clean \
	  --exclude Applications \
	  --exclude Desktop \
	  --exclude Documents \
	  --exclude Downloads \
	  --exclude Dropbox \
	  --exclude Google\ Drive \
	  --exclude OneDrive\* \
	  --exclude Library \
	  --exclude Movies \
	  --exclude Music \
	  --exclude Pictures \
	  --exclude Public \
	  --exclude dev \
	  --exclude perl5 \
	  --exclude tmp \
	  --exclude .ssh/dynamic \
	  --exclude .Trash \
	  $THOME/ $HOME/

    # symklink
    (cd $HOME ; ln -s .repos/vendor/pgollucci/emacs .emacs.d)
    (cd $HOME/.emacs.d/defuns ; ln -s $HOME/.repos/vendor/magnars/.emacs.d/defuns/* .)

    #### Private Repo
    echo "Private bits"
    ( cd $HOME ; git clone -q https://github.com/pgollucci/home-private.git $HOME/.private )
    if [ $Private -eq 1 ]; then
	(
	    cd $HOME/.ssh
	    ln -s $HOME/.private/ssh/2/id* .
	    chmod 600 $HOME/.private/ssh/2/id*
	)

	mkdir $HOME/.aws
	(cd $HOME/.aws ; ln -s .private/aws/map-p6 .)
    fi

    echo "SSH Pub Keys"
    cat $HOME/.private/ssh/2/id*.pub >> $HOME/.ssh/authorized_keys

    if [ $Private -ne 1 ]; then
	rm -rf $HOME/.private
    fi

    echo "Set Owners"
    $SUDO chown -Rh $USER:$group $HOME

    echo "Done"
}

main "$@"
